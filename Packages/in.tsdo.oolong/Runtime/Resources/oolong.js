var w=Object.defineProperty;var B=(d,e)=>{for(var a in e)w(d,a,{get:e[a],enumerable:!0})};var O={};B(O,{Oolong:()=>D,ScriptBehaviour:()=>v});var n=(d,e)=>{if(e in d){var a=d[e];if(typeof a=="function")return a}return null},g=class{constructor(){this.behaviours={};this.gameObjects={};this.updates={};this.fixedUpdates={};this.lateUpdates={}}attach(e,a,o){let i=e.GetScriptInstanceID(),s=e.GetGameObjectInstanceID(),m=a.name,t=new a;t.mono=e,t.instanceId=i,t.gameObjectId=s;let I;try{I=o?JSON.parse(o):null}catch(S){console.error(`Failed to parse serialized data for ${m} with error: ${S}`);return}let r=n(t,"update"),l=n(t,"fixedUpdate"),c=n(t,"lateUpdate");r&&(r=r.bind(t)),l&&(l=l.bind(t)),c&&(c=c.bind(t));let u=n(t,"awake"),h=n(t,"start"),p=n(t,"onEnable"),b=n(t,"onDisable"),f=n(t,"onDestroy");u&&(u=u.bind(t)),h&&(h=h.bind(t)),p&&(p=p.bind(t)),b&&(b=b.bind(t)),f&&(f=f.bind(t));let y=null,j=null;p&&(y=()=>{r&&(this.updates[i]=r),l&&(this.fixedUpdates[i]=l),c&&(this.lateUpdates[i]=c),p()}),b&&(j=()=>{delete this.updates[i],delete this.fixedUpdates[i],delete this.lateUpdates[i],b()}),e.SetHooks(u,h,y,j,f),this.behaviours[i]=t,s in this.gameObjects||(this.gameObjects[s]={}),a.name in this.gameObjects[s]||(this.gameObjects[s][m]=[]),this.gameObjects[s][m].push(i)}detach(e){let a=this.behaviours[e],o=a.gameObjectId;delete this.behaviours[e];let i=a.constructor.name,s=this.gameObjects[o][i].indexOf(e);this.gameObjects[o][i].splice(s,1),this.gameObjects[o][i].length==0&&delete this.gameObjects[o][i],delete this.updates[e],delete this.fixedUpdates[e],delete this.lateUpdates[e]}update(){for(let e in this.updates)this.updates[e]()}fixedUpdate(){for(let e in this.fixedUpdates)this.fixedUpdates[e]()}lateUpdate(){for(let e in this.lateUpdates)this.lateUpdates[e]()}dispose(){for(let e in this.behaviours)this.behaviours[e].mono.ClearHooks()}},v=class{},D=new g;var x={...O};for(U in x)globalThis[U]=x[U];var U;
